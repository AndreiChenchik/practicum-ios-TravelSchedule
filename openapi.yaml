openapi: 3.0.3

info:
  title: API Яндекс Расписаний
  description: |
    [Оригинальная документация](https://yandex.ru/dev/rasp/doc/ru/)

    API Яндекс Расписаний — инструмент программного доступа к данным сервиса
    о маршрутах и времени движения транспортных средств.

    API организован в соответствии с принципами [REST](http://ru.wikipedia.org/wiki/REST).
    Взаимодействие с API осуществляется по протоколу HTTPS посредством GET-запросов.
    Сервис возвращает данные в форматах: JSON, XML.

    Руководство содержит информацию о работе с API и предназначено для веб-разработчиков,
    которые хотят использовать информацию Яндекс Расписаний на страницах своих сайтов.

    > **Внимание** ⚠️
    >
    > Обязательным условием использования API является указание на сайте информации об источнике
    > предоставления данных — Яндекс Расписаниях.
    > Получить информацию о Яндекс Расписаниях можно с помощью API запроса `/copyright`

    <details>
      <summary>**Терминология**</summary>
      #### Расписание
      Периодичность или время отправления рейсов.
      #### Станция
      Место отправления, прибытия или остановки транспортного средства.
      Например, автобусная остановка, автовокзал, аэропорт и т. п.
      #### Рейс
      Маршрут движения транспортного средства от места отправления до места назначения
      по заранее определенному маршруту и установленному расписанию.
      #### Нитка
      Маршрут и время движения транспортного средства от начальной точки движения до конечной,
      привязанный к определенной дате. Каждому рейсу соответствует нитка или набор ниток,
      определенный для конкретного дня. Например, в будние дни рейс «Москва — Голицыно»
      может двигаться по ниткам: «Москва — Одинцово», «Одинцово — Голицыно».
      В выходные дни этот же рейс может двигаться по нитке «Москва — Голицыно».
      #### Интервальная нитка
      Нитка, на остановках которой транспорт останавливается с определенной периодичностью,
      но без четкого расписания.
      #### Перевозчик
      Предприятие, принявшее на себя обязанность доставить пассажира из места отправления
      в место назначения.
      #### Система кодирования
      Совокупность правил кодового обозначения городов, станций, перевозчиков
      (см. раздел Системы кодирования).
    </details>

    <details>
      <summary>**Системы кодирования**</summary>

      При работе с API можно использовать следующие системы кодирования:

      | **Название** | **Описание** | **Используемые коды** |
      | --- | --- | --- |
      | Система кодирования Яндекс Расписаний | Коды городов, станций, перевозчиков. | Коды городов, станций, перевозчиков. |
      | [IATA](https://ru.wikipedia.org/wiki/ИАТА) | Коды Международной ассоциации воздушного транспорта для стран, населенных пунктов, станций (аэропортов), перевозчиков. | Коды станций и перевозчиков. |
      | [ICAO](https://ru.wikipedia.org/wiki/ИКАО) | Коды Международной организации гражданской авиации для станций (аэропортов), перевозчиков. | Коды станций и перевозчиков. |
      | [Sirena](http://ru.wikipedia.org/wiki/Сирена%20(сеть)) | Коды в системах, построенных на базе сетей «Сирена», для городов, станций (аэропортов), перевозчиков. | Коды станций и перевозчиков. |
      | [ЕСР](https://ru.wikipedia.org/wiki/Единая%20сетевая%20разметка) | Коды железнодорожных станций СНГ и стран Балтии. | Коды станций. |
      | [Экспресс-3](http://www.express-3.ru/) | Коды железнодорожных станций СНГ и стран Балтии. | Коды станций. |
    </details>

    <details>
      <summary>**Сообщения об ошибках**</summary>

      Если при выполнении запроса произошла ошибка, сервер возвращает
      HTTP-статус ответа с описанием ошибки.

      Сообщение об ошибке возвращается в том формате, который указан в запросе.
      Описание ошибок передается в элементе `error`.
    </details>
  version: 3.0.0

servers:
  - url: https://api.rasp.yandex.net/v3.0
    description: Main API

security:
  - ApiKeyHeader: []
  - ApiKeyQuery: []

tags:
  - name: api
    description: Запросы к API
    externalDocs:
      description: Оригинальная документация
      url: https://yandex.ru/dev/rasp/doc/ru/

paths:
  /copyright/:
    get:
      summary: Копирайт Яндекс Расписаний
      description: |
        Запрос позволяет получить данные о Яндекс Расписаниях: URL сервиса, баннер в различных
        цветовых представлениях и уведомительный текст. Все эти данные следует разместить ниже
        или выше места, в котором расположена информация о расписаниях, в следующем порядке:
        1. Баннер.
        2. Уведомительный текст.
        3. URL Яндекс Расписаний.
      operationId: getCopyright
      parameters:
        - $ref: "#/components/parameters/format"
      tags:
        - api
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyrightReponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/CopyrightReponse"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"

components:
  securitySchemes:
    ApiKeyHeader:
      description: |
        ### Доступ к API

        Чтобы работать с API, необходимо:
        1. Сформировать ключ в [Кабинете разработчика](https://developer.tech.yandex.ru/).
        2. Пройти процедуру активации ключа.
        3. Использовать ключ в каждом запросе к API.

        #### Формирование ключа

        Авторизируйтесь в [Кабинете разработчика](https://developer.tech.yandex.ru/),
        используя любой имеющийся у вас логин на Яндексе (если логина нет,
        [зарегистрируйте новый](http://help.yandex.ru/passport/authorization/registration.xml#login)).

        Для формирования ключа укажите:
          - Название ключа (например, название вашего проекта).
          - Название сервиса — «API Яндекс Расписаний».

        Ключ, привязанный к сервису API Яндекс Расписаний, будет сгенерирован.

        #### Использование ключа

        Инструкция по активации будет отправлена на адрес вашей Яндекс Почты
        (<ваш логин на Яндексе>@yandex.ru). Пройдя процедуру активации,
        ожидайте письмо с ее подтверждением.

        Каждый запрос к API должен содержать: ключ, который может быть передан в качестве значения
        параметра `apikey` запроса или в HTTP-заголовке `Authorization`
        (параметр `apikey` имеет более высокий приоритет).

        ### Ключ доступа к API в заголовке запроса

        ```
        Authorization: 1eb31582-941a-3ac8-a61f-041c344495ab
        ```
      type: apiKey
      name: Authorization
      in: header

    ApiKeyQuery:
      description: |
        ### Ключ доступа к API в параметрах запроса

        ```
        https://api.rasp.yandex.net/v3.0/<route>/?apiKey=1eb31582-941a-3ac8-a61f-041c344495ab
        ```
      type: apiKey
      name: apikey
      in: query

  schemas:
    CopyrightReponse:
      type: object
      xml:
        name: "response"
      properties:
        copyright:
          type: object
          description: Данные о баннерах Яндекс Расписаний.
          properties:
            text:
              type: string
              description: Уведомительный текст.
              example: Данные предоставлены сервисом Яндекс Расписания
            url:
              type: string
              description: URL Яндекс Расписаний.
              example: http://rasp.yandex.ru/
            logo_vm:
              type: string
              description: Вертикальный монохромный баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 240px; height:
                130px;" src="//yandex.st/rasp/media/apicc/copyright_vert_mono.html"></iframe>
            logo_vd:
              type: string
              description: Вертикальный черно-белый баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 240px; height:
                130px;" src="//yandex.st/rasp/media/apicc/copyright_vert_dark.html"></iframe>
            logo_hy:
              type: string
              description: Горизонтальный цветной баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 740px; height:
                51px;" src="//yandex.st/rasp/media/apicc/copyright_horiz_yellow.html"></iframe>
            logo_hd:
              type: string
              description: Горизонтальный черно-белый баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 740px; height:
                51px;" src="//yandex.st/rasp/media/apicc/copyright_horiz_dark.html"></iframe>
            logo_vy:
              type: string
              description: Вертикальный цветной баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 240px; height:
                130px;" src="//yandex.st/rasp/media/apicc/copyright_vert_yellow.html"></iframe>
            logo_hm:
              type: string
              description: Горизонтальный монохромный баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 740px; height:
                  51px;" src="//yаndex.st/rasp/media/apicc/copyright_horiz_mono.html"></iframe>

    ErrorResponse:
      type: object
      xml:
        name: "response"
      properties:
        error:
          type: object
          properties:
            text:
              type: string
              description: Описание ошибки
              example: Нужно указать from и to
            http_code:
              type: integer
              description: HTTP код ответа сервера
              example: 400
            error_code:
              type: string
              description: Код ошибки
              example: v1.0_2.30.13_127
            request:
              type: string
              description: URL запроса
              example: http://api.rasp.yandex.net/v1.0/search/?apikey=key&format=json&from=s96002137

  responses:
    400:
      description: |
        Bad Request
        Запрос невалидный. Не указаны обязательные параметры.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
        application/xml:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    404:
      description: |
        Not Found
        Объект с указанным в запросе кодом не найден.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
        application/xml:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  parameters:
    format:
      name: format
      description: Формат ответа
      in: query
      schema:
        type: string
        default: json
        enum:
          - json
          - xml
