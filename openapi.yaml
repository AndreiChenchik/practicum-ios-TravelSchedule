openapi: 3.0.3

info:
  title: API Яндекс Расписаний
  description: |
    [Оригинальная документация](https://yandex.ru/dev/rasp/doc/ru/)

    API Яндекс Расписаний — инструмент программного доступа к данным сервиса
    о маршрутах и времени движения транспортных средств.

    API организован в соответствии с принципами [REST](http://ru.wikipedia.org/wiki/REST).
    Взаимодействие с API осуществляется по протоколу HTTPS посредством GET-запросов.
    Сервис возвращает данные в форматах: JSON, XML.

    Руководство содержит информацию о работе с API и предназначено для веб-разработчиков,
    которые хотят использовать информацию Яндекс Расписаний на страницах своих сайтов.

    > **Внимание** ⚠️
    >
    > Обязательным условием использования API является указание на сайте информации об источнике
    > предоставления данных — Яндекс Расписаниях.
    > Получить информацию о Яндекс Расписаниях можно с помощью API запроса `/copyright`

    <details>
      <summary>**Терминология**</summary>
      #### Расписание
      Периодичность или время отправления рейсов.
      #### Станция
      Место отправления, прибытия или остановки транспортного средства.
      Например, автобусная остановка, автовокзал, аэропорт и т. п.
      #### Рейс
      Маршрут движения транспортного средства от места отправления до места назначения
      по заранее определенному маршруту и установленному расписанию.
      #### Нитка
      Маршрут и время движения транспортного средства от начальной точки движения до конечной,
      привязанный к определенной дате. Каждому рейсу соответствует нитка или набор ниток,
      определенный для конкретного дня. Например, в будние дни рейс «Москва — Голицыно»
      может двигаться по ниткам: «Москва — Одинцово», «Одинцово — Голицыно».
      В выходные дни этот же рейс может двигаться по нитке «Москва — Голицыно».
      #### Интервальная нитка
      Нитка, на остановках которой транспорт останавливается с определенной периодичностью,
      но без четкого расписания.
      #### Перевозчик
      Предприятие, принявшее на себя обязанность доставить пассажира из места отправления
      в место назначения.
      #### Система кодирования
      Совокупность правил кодового обозначения городов, станций, перевозчиков
      (см. раздел Системы кодирования).
    </details>

    <details>
      <summary>**Системы кодирования**</summary>

      При работе с API можно использовать следующие системы кодирования:

      | **Название** | **Описание** | **Используемые коды** |
      | --- | --- | --- |
      | Система кодирования Яндекс Расписаний | Коды городов, станций, перевозчиков. | Коды городов, станций, перевозчиков. |
      | [IATA](https://ru.wikipedia.org/wiki/ИАТА) | Коды Международной ассоциации воздушного транспорта для стран, населенных пунктов, станций (аэропортов), перевозчиков. | Коды станций и перевозчиков. |
      | [ICAO](https://ru.wikipedia.org/wiki/ИКАО) | Коды Международной организации гражданской авиации для станций (аэропортов), перевозчиков. | Коды станций и перевозчиков. |
      | [Sirena](http://ru.wikipedia.org/wiki/Сирена%20(сеть)) | Коды в системах, построенных на базе сетей «Сирена», для городов, станций (аэропортов), перевозчиков. | Коды станций и перевозчиков. |
      | [ЕСР](https://ru.wikipedia.org/wiki/Единая%20сетевая%20разметка) | Коды железнодорожных станций СНГ и стран Балтии. | Коды станций. |
      | [Экспресс-3](http://www.express-3.ru/) | Коды железнодорожных станций СНГ и стран Балтии. | Коды станций. |
    </details>

    <details>
      <summary>**Сообщения об ошибках**</summary>

      Если при выполнении запроса произошла ошибка, сервер возвращает
      HTTP-статус ответа с описанием ошибки.

      Сообщение об ошибке возвращается в том формате, который указан в запросе.
      Описание ошибок передается в элементе `error`.
    </details>
  version: 3.0.0

servers:
  - url: https://api.rasp.yandex.net/v3.0
    description: Main API

security:
  - ApiKeyHeader: []
  - ApiKeyQuery: []

tags:
  - name: api
    description: Запросы к API
    externalDocs:
      description: Оригинальная документация
      url: https://yandex.ru/dev/rasp/doc/ru/

paths:
  /nearest_settlement/:
    get:
      summary: Ближайший город
      description: |
        Запрос позволяет получить информацию о ближайшем к указанной точке городе.
        Точка определяется географическими координатами (широтой и долготой) согласно
        [WGS84](http://ru.wikipedia.org/wiki/WGS_84). Поиск можно ограничить определенным радиусом
        (по умолчанию — 10 километров, но не больше 50).
      operationId: getNearestSettlement
      tags:
        - api
      parameters:
        - name: lat
          in: query
          description: Широта согласно [WGS84](http://ru.wikipedia.org/wiki/WGS_84).
          required: true
          schema:
            type: number
            format: float
          example: 54.106677
        - name: lng
          in: query
          description: Долгота согласно [WGS84](http://ru.wikipedia.org/wiki/WGS_84).
          required: true
          schema:
            type: number
            format: float
          example: 39.601726
        - name: distance
          in: query
          description: Радиус, в котором следует искать ближайший город, в километрах.
          schema:
            type: number
            format: float
            maximum: 50
            default: 10
          example: 4.981302906703597
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/lang"
        - $ref: "#/components/parameters/system"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NearestSettlementResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/NearestSettlementResponse"
            text/html:
              schema:
                $ref: "#/components/schemas/NearestSettlementResponse"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"

  /carrier/:
    get:
      summary: Информация о перевозчике
      description: |
        Запрос позволяет получить информацию о ***перевозчике*** по указанному коду перевозчика.

        Коды перевозчиков можно получить в публичных справочниках кодов,
        а также в ответах на запросы:
          - Расписание рейсов между станциями
          - Расписание рейсов по станции
          - Список станций следования
      operationId: getCarrier
      tags:
        - api
      parameters:
        - name: code
          in: query
          description: |
            Код перевозчика. По умолчанию в системе кодирования Яндекс Расписаний.
            Чтобы отправить код в другой системе кодирования, укажите параметр `system`.

            Если код указан в системе кодирования IATA,
            в ответе могут быть описаны несколько перевозчиков.
          required: true
          schema:
            type: string
          example: 680
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/lang"
        - $ref: "#/components/parameters/system"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/CarrierResponse"
            text/html:
              schema:
                $ref: "#/components/schemas/CarrierResponse"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"

  /stations_list/:
    get:
      summary: Список всех доступных станций
      description: |
        Ресурс содержит полный список станций, информацию о которых предоставляют Яндекс Расписания.
        Список структурирован географически: ответ содержит список стран со вложенными списками
        регионов и населенных пунктов, в которых находятся станции.

        > **Внимание** ⚠️
        >
        > Размер возвращаемого JSON-документа — около 40 МБ.
      operationId: getStations
      tags:
        - api
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/lang"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StationsResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/StationsResponse"
            text/html:
              schema:
                $ref: "#/components/schemas/StationsResponse"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"

  /copyright/:
    get:
      summary: Копирайт Яндекс Расписаний
      description: |
        Запрос позволяет получить данные о Яндекс Расписаниях: URL сервиса, баннер в различных
        цветовых представлениях и уведомительный текст. Все эти данные следует разместить ниже
        или выше места, в котором расположена информация о расписаниях, в следующем порядке:
        1. Баннер.
        2. Уведомительный текст.
        3. URL Яндекс Расписаний.
      operationId: getCopyright
      tags:
        - api
      parameters:
        - $ref: "#/components/parameters/format"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyrightReponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/CopyrightReponse"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"

components:
  securitySchemes:
    ApiKeyHeader:
      description: |
        ### Доступ к API

        Чтобы работать с API, необходимо:
        1. Сформировать ключ в [Кабинете разработчика](https://developer.tech.yandex.ru/).
        2. Пройти процедуру активации ключа.
        3. Использовать ключ в каждом запросе к API.

        #### Формирование ключа

        Авторизируйтесь в [Кабинете разработчика](https://developer.tech.yandex.ru/),
        используя любой имеющийся у вас логин на Яндексе (если логина нет,
        [зарегистрируйте новый](http://help.yandex.ru/passport/authorization/registration.xml#login)).

        Для формирования ключа укажите:
          - Название ключа (например, название вашего проекта).
          - Название сервиса — «API Яндекс Расписаний».

        Ключ, привязанный к сервису API Яндекс Расписаний, будет сгенерирован.

        #### Использование ключа

        Инструкция по активации будет отправлена на адрес вашей Яндекс Почты
        (<ваш логин на Яндексе>@yandex.ru). Пройдя процедуру активации,
        ожидайте письмо с ее подтверждением.

        Каждый запрос к API должен содержать: ключ, который может быть передан в качестве значения
        параметра `apikey` запроса или в HTTP-заголовке `Authorization`
        (параметр `apikey` имеет более высокий приоритет).

        ### Ключ доступа к API в заголовке запроса

        ```
        Authorization: 1eb31582-941a-3ac8-a61f-041c344495ab
        ```
      type: apiKey
      name: Authorization
      in: header

    ApiKeyQuery:
      description: |
        ### Ключ доступа к API в параметрах запроса

        ```
        https://api.rasp.yandex.net/v3.0/<route>/?apiKey=1eb31582-941a-3ac8-a61f-041c344495ab
        ```
      type: apiKey
      name: apikey
      in: query

  schemas:
    StationCodes:
      type: object
      description: |
        Коды объекта.
        На данный момент используется только система кодирования Яндекс Расписаний (`yandex_code`).
      properties:
        yandex_code:
          type: string
          description: Код в системе кодирования Яндекс Расписаний.
          example: c22754
        esr_code:
          type: string
          nullable: true
          description: |
            Код железнодорожной станции в системе кодирования
            [ЕСР](https://ru.wikipedia.org/wiki/ЕСР).

            Доступен только железнодорожных для станций, которые имеют код ЕСР.
          example: 595401

    CarrierCodes:
      type: object
      description: |
        Список кодов перевозчика в других системах кодирования, поддерживаемых Яндекс Расписаниями.
      properties:
        icao:
          type: string
          nullable: true
          description: Код перевозчика в системе кодирования [ICAO](https://ru.wikipedia.org/wiki/%D0%9C%D0%B5%D0%B6%D0%B4%D1%83%D0%BD%D0%B0%D1%80%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F_%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F_%D0%B3%D1%80%D0%B0%D0%B6%D0%B4%D0%B0%D0%BD%D1%81%D0%BA%D0%BE%D0%B9_%D0%B0%D0%B2%D0%B8%D0%B0%D1%86%D0%B8%D0%B8).
          example: c22754

        sirena:
          type: string
          nullable: true
          description: Код перевозчика в системе кодирования [Sirena](http://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D1%80%D0%B5%D0%BD%D0%B0_(%D1%81%D0%B5%D1%82%D1%8C)).
          example: 595401

        iata:
          type: string
          nullable: true
          description: Код перевозчика в системе кодирования [IATA](https://ru.wikipedia.org/wiki/%D0%9C%D0%B5%D0%B6%D0%B4%D1%83%D0%BD%D0%B0%D1%80%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F_%D0%B0%D1%81%D1%81%D0%BE%D1%86%D0%B8%D0%B0%D1%86%D0%B8%D1%8F_%D0%B2%D0%BE%D0%B7%D0%B4%D1%83%D1%88%D0%BD%D0%BE%D0%B3%D0%BE_%D1%82%D1%80%D0%B0%D0%BD%D1%81%D0%BF%D0%BE%D1%80%D1%82%D0%B0).
          example: SU

    Station:
      type: object
      properties:
        title:
          type: string
          description: Название станции.
          example: Касторная-Новая
        codes:
          $ref: "#/components/schemas/StationCodes"
        direction:
          type: string
          nullable: true
          description: |
            Направление движения поездов, на котором находится станция.

            Значение пусто, если станция не железнодорожная.
          example: Елецкое
        station_type:
          type: string
          description: |
            Тип станции.

            Возможные значения:
            - `station` — станция;
            - `platform` — платформа;
            - `stop` — остановочный пункт;
            - `checkpoint` — блок-пост;
            - `post` — пост;
            - `crossing` — разъезд;
            - `overtaking_point` — обгонный пункт;
            - `train_station` — вокзал;
            - `airport` — аэропорт;
            - `bus_station` — автовокзал;
            - `bus_stop` — автобусная остановка;
            - `unknown` — станция без типа;
            - `port` — порт;
            - `port_point` — портпункт;
            - `wharf` — пристань;
            - `river_port` — речной вокзал;
            - `marine_station` — морской вокзал.
          example: station
          enum:
            - station
            - platform
            - stop
            - checkpoint
            - post
            - crossing
            - overtaking_point
            - train_station
            - airport
            - bus_station
            - bus_stop
            - unknown
            - port
            - port_point
            - wharf
            - river_port
            - marine_station
            - ""
          nullable: true
        longitude:
          oneOf:
            - type: number
              format: float
            - type: string
          nullable: true
          description: Долгота станции.
          example: 38.123675
        latitude:
          oneOf:
            - type: number
              format: float
            - type: string
          description: Широта станции.
          example: 51.780828
        transport_type:
          type: string
          description: |
            Тип транспорта, следующего через станцию.

            Возможные значения:
            - `plane` — самолет;
            - `train` — поезд;
            - `suburban` — электричка;
            - `bus` — автобус;
            - `water`, `river` — речной транспорт;
            - `sea` — морской транспорт;
            - `helicopter` — вертолет.
          enum:
            - plane
            - train
            - suburban
            - bus
            - water
            - river
            - helicopter
            - sea
          example: train

    StationSettlement:
      type: object
      properties:
        title:
          type: string
          description: Название населенного пункта.
          example: Касторное
        codes:
          $ref: "#/components/schemas/StationCodes"
        stations:
          description: Список станций населенного пункта.
          type: array
          items:
            $ref: "#/components/schemas/Station"

    StationRegion:
      type: object
      properties:
        title:
          type: string
          description: Название региона.
          example: Курская область
        codes:
          $ref: "#/components/schemas/StationCodes"
        settlements:
          description: Список населенных пунктов региона.
          type: array
          items:
            $ref: "#/components/schemas/StationSettlement"

    StationCountry:
      type: object
      properties:
        title:
          type: string
          description: Название страны.
          example: Россия
        codes:
          $ref: "#/components/schemas/StationCodes"
        regions:
          description: Список регионов страны.
          type: array
          items:
            $ref: "#/components/schemas/StationRegion"

    Carrier:
      type: object
      properties:
        title:
          type: string
          description: Название перевозчика.
          example: РЖД
        code:
          type: integer
          description: |
            Код перевозчика в указанной системе кодирования
            (по умолчанию — в системе Яндекс Расписаний.)
          example: 680
        codes:
          $ref: "#/components/schemas/CarrierCodes"
        phone:
          type: string
          nullable: true
          description: Контактный номер телефона перевозчика.
          example: +7 (800) 775-00-00
        site:
          type: string
          nullable: true
          description: Ссылка на сайт перевозчика.
          example: http://rzd.ru
        contacts:
          type: string
          nullable: true
          description: Контактная информация, в свободной форме.
          example: |
            Телефон: +7 (1234) 123456
        logo:
          type: string
          nullable: true
          description: |
            Ссылка на используемый Яндексом логотип перевозчика в растровом формате.
          example: //yastatic.net/rasp/media/data/company/logo/logo_1.jpg
        email:
          type: string
          nullable: true
          description: Электронный почтовый адрес перевозчика.
          example: some@email.com
        address:
          type: string
          nullable: true
          description: Юридический адрес перевозчика.
          example: Санкт-Петербург, ул. Строителей, д. 18

    NearestSettlementResponse:
      type: object
      xml:
        name: "response"
      properties:
        distance:
          type: number
          format: float
          description: Расстояние до найденного города, в километрах.
          example: 5.5

        code:
          type: string
          description: Код города в системе кодирования Яндекс Расписаний.
          example: c22512

        title:
          type: string
          description: Название города.
          example: Пронск

        popular_title:
          type: string
          description: Общепринятое название города.
          example: Пронск

        short_title:
          type: string
          description: Краткое название города.
          example: Пронск

        lat:
          type: number
          format: float
          description: Широта, на которой находится город.
          example: 54.106677

        lng:
          type: number
          format: float
          description: Долгота, на которой находится город.
          example: 39.601726

        type:
          type: string
          description: |
            Тип транспортного пункта:
            - `station` — станция;
            - `settlement` — поселение.
          example: settlement
          enum:
            - settlement
            - station

      required:
        - distance
        - code
        - title
        - popular_title
        - short_title
        - lat
        - lng
        - type

    CarrierResponse:
      type: object
      xml:
        name: "response"
      properties:
        carrier:
          $ref: "#/components/schemas/Carrier"

    StationsResponse:
      type: object
      xml:
        name: "response"
      properties:
        countries:
          description: Список стран.
          type: array
          items:
            $ref: "#/components/schemas/StationCountry"

    CopyrightReponse:
      type: object
      xml:
        name: "response"
      properties:
        copyright:
          type: object
          description: Данные о баннерах Яндекс Расписаний.
          properties:
            text:
              type: string
              description: Уведомительный текст.
              example: Данные предоставлены сервисом Яндекс Расписания
            url:
              type: string
              description: URL Яндекс Расписаний.
              example: http://rasp.yandex.ru/
            logo_vm:
              type: string
              description: Вертикальный монохромный баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 240px; height:
                130px;" src="//yandex.st/rasp/media/apicc/copyright_vert_mono.html"></iframe>
            logo_vd:
              type: string
              description: Вертикальный черно-белый баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 240px; height:
                130px;" src="//yandex.st/rasp/media/apicc/copyright_vert_dark.html"></iframe>
            logo_hy:
              type: string
              description: Горизонтальный цветной баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 740px; height:
                51px;" src="//yandex.st/rasp/media/apicc/copyright_horiz_yellow.html"></iframe>
            logo_hd:
              type: string
              description: Горизонтальный черно-белый баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 740px; height:
                51px;" src="//yandex.st/rasp/media/apicc/copyright_horiz_dark.html"></iframe>
            logo_vy:
              type: string
              description: Вертикальный цветной баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 240px; height:
                130px;" src="//yandex.st/rasp/media/apicc/copyright_vert_yellow.html"></iframe>
            logo_hm:
              type: string
              description: Горизонтальный монохромный баннер.
              example: >-
                <iframe frameborder="0" style="overflow: hidden; border: 0; width: 740px; height:
                  51px;" src="//yаndex.st/rasp/media/apicc/copyright_horiz_mono.html"></iframe>

    ErrorResponse:
      type: object
      xml:
        name: "response"
      properties:
        error:
          type: object
          properties:
            text:
              type: string
              description: Описание ошибки
              example: Нужно указать from и to
            http_code:
              type: integer
              description: HTTP код ответа сервера
              example: 400
            error_code:
              type: string
              description: Код ошибки
              example: v1.0_2.30.13_127
            request:
              type: string
              description: URL запроса
              example: http://api.rasp.yandex.net/v1.0/search/?apikey=key&format=json&from=s96002137

  responses:
    400:
      description: |
        Bad Request
        Запрос невалидный. Не указаны обязательные параметры.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
        application/xml:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    404:
      description: |
        Not Found
        Объект с указанным в запросе кодом не найден.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
        application/xml:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  parameters:
    lang:
      name: lang
      description: |
        Язык возвращаемой информации, в формате <код языка>\_<код страны>. Поддерживаемые коды языка
        описаны стандартом [ISO 639](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2),
        коды стран — стандартом [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).

        По умолчанию ответ возвращается для значения `ru_RU`.

        Поддерживаемые коды языков:

        - `ru` — русский;
        - `uk` — украинский.

        Поддерживаемые коды стран:

        - `RU` — Россия;
        - `UA` — Украина.
      in: query
      schema:
        type: string
        default: ru_RU
        enum:
          - ru_RU
          - ru_UA
          - uk_UA

    format:
      name: format
      description: Формат ответа
      in: query
      schema:
        type: string
        default: json
        enum:
          - json
          - xml

    system:
      name: system
      description: |
        ***Система кодирования***, в которой указывается код перевозчика (параметр `code`) в запросе.
        Возможные значения:
        - `yandex` (значение по умолчанию) — система кодирования Яндекс Расписаний;
        - `iata` — коды Международной ассоциации воздушного транспорта](https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%B4_%D0%98%D0%90%D0%A2%D0%90);
        - `sirena` — коды в системах, построенных на базе [сетей «Сирена»](http://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D1%80%D0%B5%D0%BD%D0%B0_(%D1%81%D0%B5%D1%82%D1%8C));
        - `express` — коды железнодорожных станций СНГ и стран Балтии из базы [Экспресс-3](http://www.express-3.ru/);
        - `esr` — коды железнодорожных станций СНГ и стран Балтии из базы [ЕСР](https://ru.wikipedia.org/wiki/%D0%95%D0%B4%D0%B8%D0%BD%D0%B0%D1%8F_%D1%81%D0%B5%D1%82%D0%B5%D0%B2%D0%B0%D1%8F_%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B0).

        Параметр обязателен, если используется система кодирования,
        отличная от системы кодирования Яндекс Расписаний.
      in: query
      schema:
        type: string
        default: yandex
        enum:
          - yandex
          - iata
          - sirena
          - express
          - esr
